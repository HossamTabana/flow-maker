@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* Core colors - Light Theme */
    --background: 0 0% 100%;
    --foreground: 240 10% 3.9%;

    --card: 0 0% 100%;
    --card-foreground: 240 10% 3.9%;

    --popover: 0 0% 100%;
    --popover-foreground: 240 10% 3.9%;

    /* Agent Builder Brand Colors */
    --primary: 262 83% 58%;
    --primary-foreground: 0 0% 98%;
    --primary-glow: 262 100% 75%;
    
    --secondary: 240 4.8% 95.9%;
    --secondary-foreground: 240 5.9% 10%;

    --muted: 240 4.8% 95.9%;
    --muted-foreground: 240 3.8% 46.1%;

    --accent: 240 4.8% 95.9%;
    --accent-foreground: 240 5.9% 10%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;

    --border: 240 5.9% 90%;
    --input: 240 5.9% 90%;
    --ring: 262 83% 58%;

    /* Flow-specific colors */
    --flow-bg: 0 0% 100%;
    --node-start: 142 76% 36%;
    --node-stop: 0 84% 60%;
    --node-input: 217 91% 60%;
    --node-llm: 262 83% 58%;
    --node-agent: 290 95% 70%;
    --node-tool: 47 96% 53%;
    --node-splitter: 199 89% 48%;
    --node-collector: 30 100% 50%;
    --node-decision: 39 85% 59%;

    /* Gradients */
    --gradient-primary: linear-gradient(135deg, hsl(var(--primary)), hsl(var(--primary-glow)));
    --gradient-node: linear-gradient(135deg, hsl(var(--card)), hsl(var(--muted)));
    
    /* Shadows */
    --shadow-node: 0 4px 20px -8px hsl(var(--primary) / 0.2);
    --shadow-glow: 0 0 20px hsl(var(--primary-glow) / 0.3);
    
    /* Animations */
    --transition-smooth: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);

    --radius: 0.75rem;

    --sidebar-background: 0 0% 98%;

    --sidebar-foreground: 240 5.3% 26.1%;

    --sidebar-primary: 240 5.9% 10%;

    --sidebar-primary-foreground: 0 0% 98%;

    --sidebar-accent: 240 4.8% 95.9%;

    --sidebar-accent-foreground: 240 5.9% 10%;

    --sidebar-border: 220 13% 91%;

    --sidebar-ring: 217.2 91.2% 59.8%;
  }

  .dark {
    /* Core colors - Dark Theme */
    --background: 240 10% 3.9%;
    --foreground: 0 0% 98%;
    --card: 240 10% 3.9%;
    --card-foreground: 0 0% 98%;
    --popover: 240 10% 3.9%;
    --popover-foreground: 0 0% 98%;
    --primary: 262 83% 58%;
    --primary-foreground: 0 0% 98%;
    --secondary: 240 5.9% 10%;
    --secondary-foreground: 0 0% 98%;
    --muted: 240 5.9% 10%;
    --muted-foreground: 240 5% 64.9%;
    --accent: 240 5.9% 10%;
    --accent-foreground: 0 0% 98%;
    --border: 240 5.9% 10%;
    --input: 240 5.9% 10%;
    --ring: 262 83% 58%;
    --flow-bg: 240 10% 3.9%;
    --sidebar-background: 240 5.9% 10%;
    --sidebar-foreground: 240 4.8% 95.9%;
    --sidebar-primary: 224.3 76.3% 48%;
    --sidebar-primary-foreground: 0 0% 100%;
    --sidebar-accent: 240 3.7% 15.9%;
    --sidebar-accent-foreground: 240 4.8% 95.9%;
    --sidebar-border: 240 3.7% 15.9%;
    --sidebar-ring: 217.2 91.2% 59.8%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground font-sans;
  }
}

/* Flow Canvas Styles */
.react-flow {
  background: hsl(var(--flow-bg));
}

.react-flow__background {
  background-color: hsl(var(--flow-bg));
}

.react-flow__background .react-flow__background-pattern {
  stroke: hsl(var(--border));
  opacity: 0.4;
}

/* Custom Node Styles */
.agent-node {
  border-radius: var(--radius);
  border: 2px solid hsl(var(--border));
  background: hsl(var(--card));
  box-shadow: var(--shadow-node);
  transition: var(--transition-smooth);
  min-width: 120px;
  min-height: 60px;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
}

.agent-node:hover {
  transform: translateY(-2px);
  box-shadow: var(--shadow-glow);
}

.agent-node.selected {
  border-color: hsl(var(--primary));
  box-shadow: 0 0 0 2px hsl(var(--primary) / 0.2);
}

/* Node Type Specific Styles */
.node-start, .node-stop {
  border-radius: 50%;
  width: 80px;
  height: 80px;
}

.node-start {
  background: linear-gradient(135deg, hsl(var(--node-start)), hsl(var(--node-start) / 0.8));
  border-color: hsl(var(--node-start));
}

.node-stop {
  background: linear-gradient(135deg, hsl(var(--node-stop)), hsl(var(--node-stop) / 0.8));
  border-color: hsl(var(--node-stop));
}

.node-input {
  background: linear-gradient(135deg, hsl(var(--node-input)), hsl(var(--node-input) / 0.8));
  border-color: hsl(var(--node-input));
}

.node-llm {
  background: linear-gradient(135deg, hsl(var(--node-llm)), hsl(var(--node-llm) / 0.8));
  border-color: hsl(var(--node-llm));
}

.node-agent {
  background: linear-gradient(135deg, hsl(var(--node-agent)), hsl(var(--node-agent) / 0.8));
  border-color: hsl(var(--node-agent));
}

.node-tool {
  background: linear-gradient(135deg, hsl(var(--node-tool)), hsl(var(--node-tool) / 0.8));
  border-color: hsl(var(--node-tool));
  border-radius: 2rem;
}

.node-splitter, .node-collector {
  background: linear-gradient(135deg, hsl(var(--node-splitter)), hsl(var(--node-splitter) / 0.8));
  border-color: hsl(var(--node-splitter));
  transform: skewX(-20deg);
}

.node-collector {
  background: linear-gradient(135deg, hsl(var(--node-collector)), hsl(var(--node-collector) / 0.8));
  border-color: hsl(var(--node-collector));
}

.node-decision {
  background: linear-gradient(135deg, hsl(var(--node-decision)), hsl(var(--node-decision) / 0.8));
  border-color: hsl(var(--node-decision));
  transform: rotate(45deg);
  width: 100px;
  height: 100px;
}

.node-decision .node-content {
  transform: rotate(-45deg);
}

/* Handle Styles */
.react-flow__handle {
  width: 16px;
  height: 16px;
  border: 3px solid hsl(var(--primary));
  background: hsl(var(--background));
  border-radius: 50%;
  transition: var(--transition-smooth);
  cursor: pointer;
}

.react-flow__handle:hover {
  transform: scale(1.2);
  background: hsl(var(--primary));
  border-width: 4px;
}

.react-flow__handle.connectionindicator {
  background: hsl(var(--primary));
  border-color: hsl(var(--primary-glow));
}

/* Edge Styles */
.react-flow__edge-path {
  stroke: hsl(var(--primary));
  stroke-width: 4;
  fill: none;
}

.react-flow__edge.selected .react-flow__edge-path {
  stroke: hsl(var(--primary-glow));
  stroke-width: 5;
}

.react-flow__edge .react-flow__edge-path {
  stroke-linecap: round;
  stroke-linejoin: round;
}

/* Control Styles */
.react-flow__controls {
  background: hsl(var(--card));
  border: 1px solid hsl(var(--border));
  border-radius: var(--radius);
  backdrop-filter: blur(10px);
}

.react-flow__controls-button {
  background: transparent;
  border: none;
  color: hsl(var(--foreground));
  transition: var(--transition-smooth);
}

.react-flow__controls-button:hover {
  background: hsl(var(--accent));
  color: hsl(var(--accent-foreground));
}

/* Minimap Styles */
.react-flow__minimap {
  background: hsl(var(--card));
  border: 1px solid hsl(var(--border));
  border-radius: var(--radius);
  backdrop-filter: blur(10px);
}